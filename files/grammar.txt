COMPONENT: SPEC_COMPONENT tk_separator,COMBINED_COMPONENT tk_separator,SEPARATE_BODY tk_separator,€
SPEC_COMPONENT: COMP_LABEL SPECT_STMT_LS SPEC_BODY
COMP_LABEL: CMP_KWD tk_id
COMP_KWD: tk_global,tk_resource
SPEC_STMT_LS: SPEC_STMT SPECT_STMT_LS'
SPEC_STMT_LS': tk_sep SPEC_STMT SPEC_STMT_LS',€
SPEC_STMT: COMMON_STMT, EXTEND_CLAUSE, BODY_ONLY
COMMON_STMT: DECL, IMPORT_CLAUSE, €
DECL: TYPE_DECL, OBJ_DECL, OPTYPE_DECL, SEM_DECL, OP_DECL
TYPE_DECL: tk_type tk_id tk_eq TYPE TYPE_RESTRICTION
TYPE: SUBSCRIPTS UNSUB_TYPE, UNSUB_TYPE
SUBSCRIPTS: BRACKETED_LIST, BRACKETED_LIST SUBSCRIPTS
BRACKETED_LIST: tk_lbracket BOUND_LP tk_rbracket
BOUND_LP: BOUNDS BOUND_LP'
BOUND_LP': tk_comma BOUNDS BOUND_LP', €
BOUNDS: BOUND, BOUND tk_colon BOUND'
BOUND': BOUND
BOUND: EXPR, tk_aster
EXPR: tk_id, LITERAL, INVOCATION, CONSTRUCTOR, BINARY_EXPR, PREFIX_EXPR, SUFFIX_EXPR, CREATE_EXPR
LITERAL: tk_ilit, tk_rlit, rk_blit, tk_clit, tk_slit, tk_nlit, tk_flit
INVOCATION: EXPR PAREN_LIST
PAREN_LIST: tk_lparen PAREN_ITEM_LS tk_rparen
PAREN_ITEM_LS: EXPR_LP, €
EXPR_LP: EXPR EXPR_LP'
EXPR_LP': tk_comma EXPR EXPR_LP', €
CONSTRUCTOR: tk_lparen CONSTR_ITEM_LP tk_rparen
CONSTR_ITEM_LP: CONSTR_ITEM CONSTR_ITEM_LP'
CONSTR_ITEM_LP': tk_comma CONSTR_ITEM CONSTR_ITEM_LP', €
CONSTR_ITEM: EXPR, tk_lbracket EXPR tk_rbracket EXPR'
BINARY_EXPR: :EXPR tk_expon EXPR', EXPR tk_aster EXPR', EXPR tk_div EXPR', EXPR tk_mod EXPR', EXPR tk_rmdr EXPR', EXPR tk_plus EXPR', EXPR tk_minus EXPR', EXPR tk_concat EXPR', EXPR tk_eq EXPR', EXPR tk_ne EXPR', EXPR tk_ge EXPR', EXPR tk_le EXPR', EXPR tk_gt EXPR', EXPR tk_lt EXPR', EXPR tk_and EXPR', EXPR tk_or EXPR', EXPR tk_xor EXPR', EXPR tk_rshift EXPR', EXPR tk_lshift EXPR', EXPR tk_swap EXPR', EXPR tk_assign EXPR', EXPR tk_aug_plus EXPR', EXPR tk_aug_minus EXPR', EXPR tk_aug_aster EXPR', EXPR tk_aug_div EXPR', EXPR tk_aug_remdr EXPR', EXPR tk_aug_expon EXPR', EXPR tk_aug_or EXPR', EXPR tk_aug_and EXPR', EXPR tk_aug_concat EXPR', EXPR tk_aug_rshift EXPR', EXPR tk_aug_lshift EXPR'
EXPR': EXPR
PREFIX_EXPR:tk_not EXPR, tk_plus EXPR, tk_minus EXPR, tk_addr EXPR, tk_qmark EXPR, tk_incr EXPR, tk_decr EXPR, BASIC_TYPE PAREN_EXPR, tk_string PAREN_EXPR, tk_low tk_lparen TYPE tk_rparen, tk_high tk_lparen TYPE tk_rparen, tk_new tk_lparen SUBSCRIPTS_OPT NEW_ITEM tk_rparen
BASIC_TYPE: tk_bool, tk_char, tk_int, tk_file, tk_real
PAREN_EXPR: tk_lparen EXPR tk_rparen
SUBSCRIPTS_OPT: SUBSCRIPTS, €
NEW_ITEM: UNSUB_TYPE, tk_sem SEM_PROTO, tk_op OP_PROTOTYPE
UNSUB_TYPE: BASIC_TYPE, STRING_DEF, ENUM_DEF, POINTER_DEF, RECORD_DEF, UNION_DEF, CAPABILITY_DEF, QUALIFIED_ID
STRING_DEF: tk_string tk_lbracket STRING_LIM tk_rbracket, tk_string tk_lparen STRING_LIM tk_rparen
STRING_LIM: EXPR, tk_aster
ENUM_DEF: tk_enum tk_lparen ID_LP tk_rparen
ID_LP: tk_id ID_LP'
ID_LP': tk_comma tk_id ID_LP', €
POINTER_DEF: tk_ptr TYPE, tk_ptr tk_any
RECORD_DEF: tk_rec tk_lparen FIELD_LP tk_rparen
FIELD_LP: FIELD, FIELD tk_separator, FIELD tk_separator FIELD_LP
FIELD: VAR_DEF_LP
VAR_DEF_LP: VAR_DEF VAR_DEF_LP'
VAR_DEF_LP': tk_comma VAR_DEF VAR_DEF_LP', €
VAR_DEF: ID_SUBS_LP VAR_ATT
ID_SUBS_LP: ID_SUBS ID_SUBS_LP'
ID_SUBS_LP': tk_comma ID_SUBS ID_SUBS_LP', €
ID_SUBS: tk_id, tk_id SUBSCRIPTS
VAR_ATT: tk_colon TYPE, tk_colon TYPE tk_assign EXPR, tk_assign EXPR, tk_separator
UNION_DEF: tk_union tk_lparen FIELD_LP tk_rparen
CAPABILITY_DEF: tk_cap CAP_FOR
CAP_FOR: QUALIFIED_ID, OP_PROTOTYPE, tk_sem, SEM_PROTO, tk_vm
QUALIFIED_ID: tk_id, tk_id tk_period tk_id
OP_PROTOTYPE: PROTOTYPE	OP_RESTRICTION_OPT
PROTOTYPE: PARAMETERS RETURN_SPEC_OPT
PARAMETERS: tk_lparen PARAM_SPEC_LS tk_rparen
PARAM_SPEC_LS: PARAM_SPEC_LP, €
PARAM_SPEC_LP: PARAM_SPEC, PARAM_SPEC tk_separator, PARAM_SPEC tk_separator PARAM_SPEC_LP
PARAM_SPEC: PARAM_KIND_OPT TYPE, PARAM_KIND_OPT	ID_SUBS_LP tk_colon TYPE
PARAM_KIND_OPT: tk_val, tk_var, tk_res, tk_ref, €
RETURN_SPEC_OPT: RETURN_SPEC_NULL tk_returns TYPE, tk_returns ID_SUBS tk_colon TYPE, tk_returns tk_id tk_bogus
RETURN_SPEC_NULL: €
SEM_PROTO: RETURN_SPEC_NULL
OP_RESTRICTION_OPT: tk_lbrace OP_RESTRICTION tk_rbrace, €
OP_RESTRICTION: tk_call tk_send, tk_call tk_comma tk_send, tk_send tk_comma tk_call
CREATE_EXPR: tk_create CREATE_CALL LOCATION_OPT
CREATE_CALL: RSRC_NAME PAREN_LIST
RSRC_NAME: tk_id, tk_vm
LOCATION_OPT: tk_on, EXPR, €
TYPE_RESTRICTION: tk_lbrace tk_id tk_rbrace, €
OBJ_DECL: VAR_OR_CONST VAR_DEF_LP
VAR_OR_CONST: tk_var, tk_const
OPTYPE_DECL: tk_optype tk_id EQ_OPT OP_PROTOTYPE
EQ_OPT: tk_eq, €
SEM_DECL: tk_sem SEM_DEF_LP
SEM_DEF_LP: SEM_DEF SEM_DEF_LP'
SEM_DEF_LP': tk_comma SEM_DEF SEM_DEF_LP', €
SEM_DEF: ID_SUBS SEM_PROTO SEM_INIT
SEM_INIT: tk_assign, EXPR, €
OP_DECL: OP_OR_EXT, OPER_DEF_LP
OP_OR_EXT: tk_op, tk_external
OPER_DEF_LP: OPER_DEF OPER_DEF_LP'
OPER_DEF_LP': tk_comma OPER_DEF OPER_DEF_LP', €
OPER_DEF: ID_SUBS_LP OP_PROTOTYPE, ID_SUBS_LP COLON_OPT QUALIFIED_ID
COLON_OPT: tk_colon, €
IMPORT_CLAUSE: tk_import IMPORT_LIST
IMPORT_LIST: IMPORT_NAME IMPORT_LIST'
IMPORT_LIST': tk_comma IMPORT_NAME IMPORT_LIST', €
IMPORT_NAME: tk_id
EXTEND_CLAUSE: tk_extend IMPORT_LIST
BODY_ONLY: STMT, PROC, PROCESS, PROCEDURE, INITIAL_BLOCK, FINAL_BLOCK
STMT: SKIP_STMT, STOP_STMT, EXIT_STMT, NEXT_STMT, RETURN_STMT, REPLY_STMT, FORWARD_STMT, SEND_STMT, EXPLICIT_CALL, DESTROY__STMT, BEGIN_END, IF_STMT, DO_STMT, FOR_ALL_STMT, V_STMT, INPUT_STMT, RECEIVE_STMT, P_STMT, CONCURRENT_STMT
SKIP_STMT: tk_skip
STOP_STMT: tk_stop EXIT_CODE_OPT
EXIT_CODE_OPT: tk_lparen EXPR
EXIT_STMT: tk_exit
NEXT_STMT: tk_next
RETURN_STMT: tk_return
REPLY_STMT: tk_reply
FORWARD_STMT: tk_forward INVOCATION
SEND_STMT: tk_send INVOCATION
EXPLICIT_CALL: tk_call INVOCATION
DESTROY_STMT: tk_destroy EXPR
BEGIN_END: tk_begin BLOCK tk_end
BLOCK: BLOCK_ITEMS
BLOCK_ITEMS: BLOCK_ITEM	BLOCK_ITEMS'
BLOCK_ITEMS': tk_separator BLOCK_ITEM BLOCK_ITEMS', €
BLOCK_ITEM: DECL, STMT, EXPR, IMPORT_CLAUSE, €
IF_STMT: tk_if GUARDED_CMD_LP ELSE_CMD_OPT tk_fi
GUARDED_CMD_LP: GUARDED_CMD GUARDED_CMD_LP'
GUARDED_CMD_LP': tk_square GUARDED_CMD GUARDED_CMD_LP', €
GUARDED_CMD: EXPR tk_arrow BLOCK
ELSE_CMD_OPT: tk_square tk_else tk_arrow BLOCK
DO_STMT: tk_do GUARDED_CMD_LP ELSE_CMD_OPT tk_od
FOR_ALL_STMT: tk_fa QUANTIFIER_LP tk_arrow BLOCK tk_af
QUANTIFIER_LP: QUANTIFIER QUANTIFIER_LP'
QUANTIFIER_LP': tk_comma QUANTIFIER QUANTIFIER_LP', €
QUANTIFIER: tk_id tk_assign EXPR DIRECTION EXPR' STEP_OPT SUCH_THAT_OPT
DIRECTION: tk_to, tk_downto
STEP_OPT: tk_by	EXPR, €
SUCH_THAT_OPT: tk_suchthat EXPR, €
V_STMT: tk_v tk_lparen EXPR tk_rparen
INPUT_STMT: tk_in IN_CMD_LP ELSE_CMD_OPT tk_ni
IN_CMD_LP: IN_CMD IN_CMD_LP'
IN_CMD_LP': tk_square IN_CMD IN_CMD_LP', €
IN_CMD: QUANTIFIERS_OPT	IN_SPEC	SYNC_EXPR_OPT SCHED_EXPR_OPT tk_arrow BLOCK
QUANTIFIERS_OPT: tk_lparen QUANTIFIER_LP tk_rparen
IN_SPEC: IN_OP PARAM_NAMES
IN_OP: QUALIFIED_ID, QUALIFIED_ID SUBSCRIPTS
PARAM_NAMES: tk_lparen ID_LS tk_rparen RETURN_NAME_OPT
ID_LS: ID_LP, €
RETURN_NAME_OPT: tk_returns tk_id, €
SYNC_EXPR_OPT: tk_and EXPR, tk_suchthat
SCHED_EXPR_OPT: tk_by EXPR, €
RECEIVE_STMT: tk_receive EXPR PAREN_LIST
P_STMT: tk_p tk_lparen EXPR tk_rparen
CONCURRENT_STMT: tk_co CONCURRENT_CMD_LP tk_oc
CONCURRENT_CMD_LP: CONCURRENT_CMD CONCURRENT_CMD_LP'
CONCURRENT_CMD_LP': tk_parallel	CONCURRENT_CMD CONCURRENT_CMD_LP', €
CONCURRENT_CMD:QUANTIFIERS_OPT SEPARATOR_OPT CONCURRENT_INVOCATION POST_PROCESSING_OPT
SEPARATOR_OPT: tk_separator SEPARATOR_OPT, €
CONCURRENT_INVOCATION: EXPLICIT_CALL, SEND_STMT, EXPR
POST_PROCESSING_OPT: tk_arrow BLOCK, €
PROC: tk_proc tk_id PARAM_NAMES BLOCK END_ID
END_ID: tk_end ID_OPT
ID_OPT: tk_id, €
PROCESS: tk_process tk_id RETURN_SPEC_NULL QUANTIFIERS_OPT BLOCK END_ID
PROCEDURE: tk_procedure	tk_id PROTOTYPE BLOCK END_ID
INITIAL_BLOCK: tk_initial	BLOCK	tk_end	INITIAL_OPT
INITIAL_OPT: tk_initial, €
FINAL_BLOCK: tk_final BLOCK
FINAL_OPT: tk_final, €
COMBINED_COMPONENT: COMBINED_SPECPART BODY_STMT_LS END_ID
COMBINED_SPECPART: COMP_LABEL COMP_PARAMS
COMP_PARAMS: PARAMETERS
BODY_STMT_LS: BODY_STMT	BODY_STMT_LS'
BODY_STMT_LS': tk_separator BODY_STMT BODY_STMT_LS', €
BODY_STMT: COMMON_STMT, EXPR, BODY_ONLY, EXTEND_CLAUSE
SEPARATE_BODY: tk_body tk_id BODY_STMT_LS END_ID
